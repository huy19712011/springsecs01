-- drop table if exists authorities;
-- drop table if exists users;
--
-- create table users(
--     username nvarchar(50) not null primary key,
--     password nvarchar(500) not null,
--     enabled bit not null
-- );
--
-- create table authorities (
--     username nvarchar(50) not null,
--     authority nvarchar(50) not null,
--     constraint fk_authorities_users foreign key(username) references users(username)
-- );
--
-- create unique index ix_auth_username on authorities (username, authority);


-- drop table if exists customers;
-- CREATE TABLE customers (
--   id int NOT NULL IDENTITY(1,1),
--   email nvarchar(45) NOT NULL,
--   pwd nvarchar(200) NOT NULL,
--   role nvarchar(45) NOT NULL,
--   PRIMARY KEY (id)
-- );

-------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------

-- CREATE TABLE `customer` (
--   `customer_id` int NOT NULL AUTO_INCREMENT,
--   `name` varchar(100) NOT NULL,
--   `email` varchar(100) NOT NULL,
--   `mobile_number` varchar(20) NOT NULL,
--   `pwd` varchar(500) NOT NULL,
--   `role` varchar(100) NOT NULL,
--   `create_dt` date DEFAULT NULL,
--   PRIMARY KEY (`customer_id`)
-- );
--
-- INSERT INTO `customer` (`name`,`email`,`mobile_number`, `pwd`, `role`,`create_dt`)
--  VALUES ('Happy','happy@example.com','5334122365', '{bcrypt}$2a$12$88.f6upbBvy0okEa7OfHFuorV29qeK.sVbB9VQ6J6dWM1bW6Qef8m', 'admin',CURDATE());
--
-- CREATE TABLE `accounts` (
--   `customer_id` int NOT NULL,
--    `account_number` int NOT NULL,
--   `account_type` varchar(100) NOT NULL,
--   `branch_address` varchar(200) NOT NULL,
--   `create_dt` date DEFAULT NULL,
--   PRIMARY KEY (`account_number`),
--   KEY `customer_id` (`customer_id`),
--   CONSTRAINT `customer_ibfk_1` FOREIGN KEY (`customer_id`) REFERENCES `customer` (`customer_id`) ON DELETE CASCADE
-- );
--
-- INSERT INTO `accounts` (`customer_id`, `account_number`, `account_type`, `branch_address`, `create_dt`)
--  VALUES (1, 1865764534, 'Savings', '123 Main Street, New York', CURDATE());
--
-- CREATE TABLE `account_transactions` (
--   `transaction_id` varchar(200) NOT NULL,
--   `account_number` int NOT NULL,
--   `customer_id` int NOT NULL,
--   `transaction_dt` date NOT NULL,
--   `transaction_summary` varchar(200) NOT NULL,
--   `transaction_type` varchar(100) NOT NULL,
--   `transaction_amt` int NOT NULL,
--   `closing_balance` int NOT NULL,
--   `create_dt` date DEFAULT NULL,
--   PRIMARY KEY (`transaction_id`),
--   KEY `customer_id` (`customer_id`),
--   KEY `account_number` (`account_number`),
--   CONSTRAINT `accounts_ibfk_2` FOREIGN KEY (`account_number`) REFERENCES `accounts` (`account_number`) ON DELETE CASCADE,
--   CONSTRAINT `acct_user_ibfk_1` FOREIGN KEY (`customer_id`) REFERENCES `customer` (`customer_id`) ON DELETE CASCADE
-- );
--
--
--
-- INSERT INTO `account_transactions` (`transaction_id`, `account_number`, `customer_id`, `transaction_dt`, `transaction_summary`, `transaction_type`,`transaction_amt`,
-- `closing_balance`, `create_dt`)  VALUES (UUID(), 1865764534, 1, DATE_SUB(CURDATE(), INTERVAL 7 DAY), 'Coffee Shop', 'Withdrawal', 30,34500,DATE_SUB(CURDATE(), INTERVAL 7 DAY));
--
-- INSERT INTO `account_transactions` (`transaction_id`, `account_number`, `customer_id`, `transaction_dt`, `transaction_summary`, `transaction_type`,`transaction_amt`,
-- `closing_balance`, `create_dt`)  VALUES (UUID(), 1865764534, 1, DATE_SUB(CURDATE(), INTERVAL 6 DAY), 'Uber', 'Withdrawal', 100,34400,DATE_SUB(CURDATE(), INTERVAL 6 DAY));
--
-- INSERT INTO `account_transactions` (`transaction_id`, `account_number`, `customer_id`, `transaction_dt`, `transaction_summary`, `transaction_type`,`transaction_amt`,
-- `closing_balance`, `create_dt`)  VALUES (UUID(), 1865764534, 1, DATE_SUB(CURDATE(), INTERVAL 5 DAY), 'Self Deposit', 'Deposit', 500,34900,DATE_SUB(CURDATE(), INTERVAL 5 DAY));
--
-- INSERT INTO `account_transactions` (`transaction_id`, `account_number`, `customer_id`, `transaction_dt`, `transaction_summary`, `transaction_type`,`transaction_amt`,
-- `closing_balance`, `create_dt`)  VALUES (UUID(), 1865764534, 1, DATE_SUB(CURDATE(), INTERVAL 4 DAY), 'Ebay', 'Withdrawal', 600,34300,DATE_SUB(CURDATE(), INTERVAL 4 DAY));
--
-- INSERT INTO `account_transactions` (`transaction_id`, `account_number`, `customer_id`, `transaction_dt`, `transaction_summary`, `transaction_type`,`transaction_amt`,
-- `closing_balance`, `create_dt`)  VALUES (UUID(), 1865764534, 1, DATE_SUB(CURDATE(), INTERVAL 2 DAY), 'OnlineTransfer', 'Deposit', 700,35000,DATE_SUB(CURDATE(), INTERVAL 2 DAY));
--
-- INSERT INTO `account_transactions` (`transaction_id`, `account_number`, `customer_id`, `transaction_dt`, `transaction_summary`, `transaction_type`,`transaction_amt`,
-- `closing_balance`, `create_dt`)  VALUES (UUID(), 1865764534, 1, DATE_SUB(CURDATE(), INTERVAL 1 DAY), 'Amazon.com', 'Withdrawal', 100,34900,DATE_SUB(CURDATE(), INTERVAL 1 DAY));
--
--
-- CREATE TABLE `loans` (
--   `loan_number` int NOT NULL AUTO_INCREMENT,
--   `customer_id` int NOT NULL,
--   `start_dt` date NOT NULL,
--   `loan_type` varchar(100) NOT NULL,
--   `total_loan` int NOT NULL,
--   `amount_paid` int NOT NULL,
--   `outstanding_amount` int NOT NULL,
--   `create_dt` date DEFAULT NULL,
--   PRIMARY KEY (`loan_number`),
--   KEY `customer_id` (`customer_id`),
--   CONSTRAINT `loan_customer_ibfk_1` FOREIGN KEY (`customer_id`) REFERENCES `customer` (`customer_id`) ON DELETE CASCADE
-- );
--
-- INSERT INTO `loans` ( `customer_id`, `start_dt`, `loan_type`, `total_loan`, `amount_paid`, `outstanding_amount`, `create_dt`)
--  VALUES ( 1, '2020-10-13', 'Home', 200000, 50000, 150000, '2020-10-13');
--
-- INSERT INTO `loans` ( `customer_id`, `start_dt`, `loan_type`, `total_loan`, `amount_paid`, `outstanding_amount`, `create_dt`)
--  VALUES ( 1, '2020-06-06', 'Vehicle', 40000, 10000, 30000, '2020-06-06');
--
-- INSERT INTO `loans` ( `customer_id`, `start_dt`, `loan_type`, `total_loan`, `amount_paid`, `outstanding_amount`, `create_dt`)
--  VALUES ( 1, '2018-02-14', 'Home', 50000, 10000, 40000, '2018-02-14');
--
-- INSERT INTO `loans` ( `customer_id`, `start_dt`, `loan_type`, `total_loan`, `amount_paid`, `outstanding_amount`, `create_dt`)
--  VALUES ( 1, '2018-02-14', 'Personal', 10000, 3500, 6500, '2018-02-14');
--
-- CREATE TABLE `cards` (
--   `card_id` int NOT NULL AUTO_INCREMENT,
--   `card_number` varchar(100) NOT NULL,
--   `customer_id` int NOT NULL,
--   `card_type` varchar(100) NOT NULL,
--   `total_limit` int NOT NULL,
--   `amount_used` int NOT NULL,
--   `available_amount` int NOT NULL,
--   `create_dt` date DEFAULT NULL,
--   PRIMARY KEY (`card_id`),
--   KEY `customer_id` (`customer_id`),
--   CONSTRAINT `card_customer_ibfk_1` FOREIGN KEY (`customer_id`) REFERENCES `customer` (`customer_id`) ON DELETE CASCADE
-- );
--
-- INSERT INTO `cards` (`card_number`, `customer_id`, `card_type`, `total_limit`, `amount_used`, `available_amount`, `create_dt`)
--  VALUES ('4565XXXX4656', 1, 'Credit', 10000, 500, 9500, CURDATE());
--
-- INSERT INTO `cards` (`card_number`, `customer_id`, `card_type`, `total_limit`, `amount_used`, `available_amount`, `create_dt`)
--  VALUES ('3455XXXX8673', 1, 'Credit', 7500, 600, 6900, CURDATE());
--
-- INSERT INTO `cards` (`card_number`, `customer_id`, `card_type`, `total_limit`, `amount_used`, `available_amount`, `create_dt`)
--  VALUES ('2359XXXX9346', 1, 'Credit', 20000, 4000, 16000, CURDATE());
--
-- CREATE TABLE `notice_details` (
--   `notice_id` int NOT NULL AUTO_INCREMENT,
--   `notice_summary` varchar(200) NOT NULL,
--   `notice_details` varchar(500) NOT NULL,
--   `notic_beg_dt` date NOT NULL,
--   `notic_end_dt` date DEFAULT NULL,
--   `create_dt` date DEFAULT NULL,
--   `update_dt` date DEFAULT NULL,
--   PRIMARY KEY (`notice_id`)
-- );
--
-- INSERT INTO `notice_details` ( `notice_summary`, `notice_details`, `notic_beg_dt`, `notic_end_dt`, `create_dt`, `update_dt`)
-- VALUES ('Home Loan Interest rates reduced', 'Home loan interest rates are reduced as per the goverment guidelines. The updated rates will be effective immediately',
-- CURDATE() - INTERVAL 30 DAY, CURDATE() + INTERVAL 30 DAY, CURDATE(), null);
--
-- INSERT INTO `notice_details` ( `notice_summary`, `notice_details`, `notic_beg_dt`, `notic_end_dt`, `create_dt`, `update_dt`)
-- VALUES ('Net Banking Offers', 'Customers who will opt for Internet banking while opening a saving account will get a $50 amazon voucher',
-- CURDATE() - INTERVAL 30 DAY, CURDATE() + INTERVAL 30 DAY, CURDATE(), null);
--
-- INSERT INTO `notice_details` ( `notice_summary`, `notice_details`, `notic_beg_dt`, `notic_end_dt`, `create_dt`, `update_dt`)
-- VALUES ('Mobile App Downtime', 'The mobile application of the EazyBank will be down from 2AM-5AM on 12/05/2020 due to maintenance activities',
-- CURDATE() - INTERVAL 30 DAY, CURDATE() + INTERVAL 30 DAY, CURDATE(), null);
--
-- INSERT INTO `notice_details` ( `notice_summary`, `notice_details`, `notic_beg_dt`, `notic_end_dt`, `create_dt`, `update_dt`)
-- VALUES ('E Auction notice', 'There will be a e-auction on 12/08/2020 on the Bank website for all the stubborn arrears.Interested parties can participate in the e-auction',
-- CURDATE() - INTERVAL 30 DAY, CURDATE() + INTERVAL 30 DAY, CURDATE(), null);
--
-- INSERT INTO `notice_details` ( `notice_summary`, `notice_details`, `notic_beg_dt`, `notic_end_dt`, `create_dt`, `update_dt`)
-- VALUES ('Launch of Millennia Cards', 'Millennia Credit Cards are launched for the premium customers of EazyBank. With these cards, you will get 5% cashback for each purchase',
-- CURDATE() - INTERVAL 30 DAY, CURDATE() + INTERVAL 30 DAY, CURDATE(), null);
--
-- INSERT INTO `notice_details` ( `notice_summary`, `notice_details`, `notic_beg_dt`, `notic_end_dt`, `create_dt`, `update_dt`)
-- VALUES ('COVID-19 Insurance', 'EazyBank launched an insurance policy which will cover COVID-19 expenses. Please reach out to the branch for more details',
-- CURDATE() - INTERVAL 30 DAY, CURDATE() + INTERVAL 30 DAY, CURDATE(), null);
--
-- CREATE TABLE `contact_messages` (
--   `contact_id` varchar(50) NOT NULL,
--   `contact_name` varchar(50) NOT NULL,
--   `contact_email` varchar(100) NOT NULL,
--   `subject` varchar(500) NOT NULL,
--   `message` varchar(2000) NOT NULL,
--   `create_dt` date DEFAULT NULL,
--   PRIMARY KEY (`contact_id`)
-- );

----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------
-- CREATE TABLE customer (
--   customer_id INT NOT NULL IDENTITY(1,1),
--   name NVARCHAR(100) NOT NULL,
--   email NVARCHAR(100) NOT NULL,
--   mobile_number NVARCHAR(20) NOT NULL,
--   pwd NVARCHAR(500) NOT NULL,
--   role NVARCHAR(100) NOT NULL,
--   create_dt DATE DEFAULT NULL,
--   PRIMARY KEY (customer_id)
-- );
--
-- INSERT INTO customer (name, email, mobile_number, pwd, role, create_dt)
-- VALUES ('Happy', 'happy@example.com', '5334122365', '{bcrypt}$2a$12$88.f6upbBvy0okEa7OfHFuorV29qeK.sVbB9VQ6J6dWM1bW6Qef8m', 'admin', CAST(GETDATE() AS DATE));
--
-- CREATE TABLE accounts (
--   customer_id INT NOT NULL,
--   account_number INT NOT NULL,
--   account_type NVARCHAR(100) NOT NULL,
--   branch_address NVARCHAR(200) NOT NULL,
--   create_dt DATE DEFAULT NULL,
--   PRIMARY KEY (account_number),
--   FOREIGN KEY (customer_id) REFERENCES customer (customer_id) ON DELETE CASCADE
-- );
--
-- INSERT INTO accounts (customer_id, account_number, account_type, branch_address, create_dt)
-- VALUES (1, 1865764534, 'Savings', '123 Main Street, New York', CAST(GETDATE() AS DATE));
--
-- CREATE TABLE account_transactions (
--   transaction_id UNIQUEIDENTIFIER NOT NULL DEFAULT NEWID(),
--   account_number INT NOT NULL,
--   customer_id INT NOT NULL,
--   transaction_dt DATE NOT NULL,
--   transaction_summary NVARCHAR(200) NOT NULL,
--   transaction_type NVARCHAR(100) NOT NULL,
--   transaction_amt INT NOT NULL,
--   closing_balance INT NOT NULL,
--   create_dt DATE DEFAULT NULL,
--   PRIMARY KEY (transaction_id),
--   FOREIGN KEY (account_number) REFERENCES accounts (account_number) ON DELETE NO ACTION,
--   FOREIGN KEY (customer_id) REFERENCES customer (customer_id) ON DELETE NO ACTION
-- );
--
-- INSERT INTO account_transactions (account_number, customer_id, transaction_dt, transaction_summary, transaction_type, transaction_amt, closing_balance, create_dt)
-- VALUES (1865764534, 1, DATEADD(DAY, -7, GETDATE()), 'Coffee Shop', 'Withdrawal', 30, 34500, DATEADD(DAY, -7, GETDATE()));
--
-- INSERT INTO account_transactions (account_number, customer_id, transaction_dt, transaction_summary, transaction_type, transaction_amt, closing_balance, create_dt)
-- VALUES (1865764534, 1, DATEADD(DAY, -6, GETDATE()), 'Uber', 'Withdrawal', 100, 34400, DATEADD(DAY, -6, GETDATE()));
--
-- INSERT INTO account_transactions (account_number, customer_id, transaction_dt, transaction_summary, transaction_type, transaction_amt, closing_balance, create_dt)
-- VALUES (1865764534, 1, DATEADD(DAY, -5, GETDATE()), 'Self Deposit', 'Deposit', 500, 34900, DATEADD(DAY, -5, GETDATE()));
--
-- INSERT INTO account_transactions (account_number, customer_id, transaction_dt, transaction_summary, transaction_type, transaction_amt, closing_balance, create_dt)
-- VALUES (1865764534, 1, DATEADD(DAY, -4, GETDATE()), 'Ebay', 'Withdrawal', 600, 34300, DATEADD(DAY, -4, GETDATE()));
--
-- INSERT INTO account_transactions (account_number, customer_id, transaction_dt, transaction_summary, transaction_type, transaction_amt, closing_balance, create_dt)
-- VALUES (1865764534, 1, DATEADD(DAY, -2, GETDATE()), 'OnlineTransfer', 'Deposit', 700, 35000, DATEADD(DAY, -2, GETDATE()));
--
-- INSERT INTO account_transactions (account_number, customer_id, transaction_dt, transaction_summary, transaction_type, transaction_amt, closing_balance, create_dt)
-- VALUES (1865764534, 1, DATEADD(DAY, -1, GETDATE()), 'Amazon.com', 'Withdrawal', 100, 34900, DATEADD(DAY, -1, GETDATE()));
--
-- CREATE TABLE loans (
--   loan_number INT NOT NULL IDENTITY(1,1),
--   customer_id INT NOT NULL,
--   start_dt DATE NOT NULL,
--   loan_type NVARCHAR(100) NOT NULL,
--   total_loan INT NOT NULL,
--   amount_paid INT NOT NULL,
--   outstanding_amount INT NOT NULL,
--   create_dt DATE DEFAULT NULL,
--   PRIMARY KEY (loan_number),
--   FOREIGN KEY (customer_id) REFERENCES customer (customer_id) ON DELETE CASCADE
-- );
--
-- INSERT INTO loans (customer_id, start_dt, loan_type, total_loan, amount_paid, outstanding_amount, create_dt)
-- VALUES (1, '2020-10-13', 'Home', 200000, 50000, 150000, '2020-10-13');
--
-- INSERT INTO loans (customer_id, start_dt, loan_type, total_loan, amount_paid, outstanding_amount, create_dt)
-- VALUES (1, '2020-06-06', 'Vehicle', 40000, 10000, 30000, '2020-06-06');
--
-- INSERT INTO loans (customer_id, start_dt, loan_type, total_loan, amount_paid, outstanding_amount, create_dt)
-- VALUES (1, '2018-02-14', 'Home', 50000, 10000, 40000, '2018-02-14');
--
-- INSERT INTO loans (customer_id, start_dt, loan_type, total_loan, amount_paid, outstanding_amount, create_dt)
-- VALUES (1, '2018-02-14', 'Personal', 10000, 3500, 6500, '2018-02-14');
--
-- CREATE TABLE cards (
--   card_id INT NOT NULL IDENTITY(1,1),
--   card_number NVARCHAR(100) NOT NULL,
--   customer_id INT NOT NULL,
--   card_type NVARCHAR(100) NOT NULL,
--   total_limit INT NOT NULL,
--   amount_used INT NOT NULL,
--   available_amount INT NOT NULL,
--   create_dt DATE DEFAULT NULL,
--   PRIMARY KEY (card_id),
--   FOREIGN KEY (customer_id) REFERENCES customer (customer_id) ON DELETE CASCADE
-- );
--
-- INSERT INTO cards (card_number, customer_id, card_type, total_limit, amount_used, available_amount, create_dt)
-- VALUES ('4565XXXX4656', 1, 'Credit', 10000, 500, 9500, CAST(GETDATE() AS DATE));
--
-- INSERT INTO cards (card_number, customer_id, card_type, total_limit, amount_used, available_amount, create_dt)
-- VALUES ('3455XXXX8673', 1, 'Credit', 7500, 600, 6900, CAST(GETDATE() AS DATE));
--
-- INSERT INTO cards (card_number, customer_id, card_type, total_limit, amount_used, available_amount, create_dt)
-- VALUES ('2359XXXX9346', 1, 'Credit', 20000, 4000, 16000, CAST(GETDATE() AS DATE));
--
-- CREATE TABLE notice_details (
--   notice_id INT NOT NULL IDENTITY(1,1),
--   notice_summary NVARCHAR(200) NOT NULL,
--   notice_details NVARCHAR(500) NOT NULL,
--   notic_beg_dt DATE NOT NULL,
--   notic_end_dt DATE DEFAULT NULL,
--   create_dt DATE DEFAULT NULL,
--   update_dt DATE DEFAULT NULL,
--   PRIMARY KEY (notice_id)
-- );
--
-- INSERT INTO notice_details (notice_summary, notice_details, notic_beg_dt, notic_end_dt, create_dt, update_dt)
-- VALUES ('Home Loan Interest rates reduced', 'Home loan interest rates are reduced as per the government guidelines. The updated rates will be effective immediately',
-- DATEADD(DAY, -30, GETDATE()), DATEADD(DAY, 30, GETDATE()), CAST(GETDATE() AS DATE), NULL);
--
-- INSERT INTO notice_details (notice_summary, notice_details, notic_beg_dt, notic_end_dt, create_dt, update_dt)
-- VALUES ('Net Banking Offers', 'Customers who will opt for Internet banking while opening a saving account will get a $50 amazon voucher',
-- DATEADD(DAY, -30, GETDATE()), DATEADD(DAY, 30, GETDATE()), CAST(GETDATE() AS DATE), NULL);
--
-- INSERT INTO notice_details (notice_summary, notice_details, notic_beg_dt, notic_end_dt, create_dt, update_dt)
-- VALUES ('Mobile App Downtime', 'The mobile application of the EazyBank will be down from 2AM-5AM on 12/05/2020 due to maintenance activities',
-- DATEADD(DAY, -30, GETDATE()), DATEADD(DAY, 30, GETDATE()), CAST(GETDATE() AS DATE), NULL);
--
-- INSERT INTO notice_details (notice_summary, notice_details, notic_beg_dt, notic_end_dt, create_dt, update_dt)
-- VALUES ('E Auction notice', 'There will be an e-auction on 12/08/2020 on the Bank website for all the stubborn arrears. Interested parties can participate in the e-auction',
-- DATEADD(DAY, -30, GETDATE()), DATEADD(DAY, 30, GETDATE()), CAST(GETDATE() AS DATE), NULL);
--
-- INSERT INTO notice_details (notice_summary, notice_details, notic_beg_dt, notic_end_dt, create_dt, update_dt)
-- VALUES ('Launch of Millennia Cards', 'Millennia Credit Cards are launched for the premium customers of EazyBank. With these cards, you will get 5% cashback for each purchase',
-- DATEADD(DAY, -30, GETDATE()), DATEADD(DAY, 30, GETDATE()), CAST(GETDATE() AS DATE), NULL);
--
-- INSERT INTO notice_details (notice_summary, notice_details, notic_beg_dt, notic_end_dt, create_dt, update_dt)
-- VALUES ('COVID-19 Insurance', 'EazyBank launched an insurance policy which will cover COVID-19 expenses. Please reach out to the branch for more details',
-- DATEADD(DAY, -30, GETDATE()), DATEADD(DAY, 30, GETDATE()), CAST(GETDATE() AS DATE), NULL);
--
-- CREATE TABLE contact_messages (
--   contact_id NVARCHAR(50) NOT NULL,
--   contact_name NVARCHAR(50) NOT NULL,
--   contact_email NVARCHAR(100) NOT NULL,
--   subject NVARCHAR(500) NOT NULL,
--   message NVARCHAR(2000) NOT NULL,
--   create_dt DATE DEFAULT NULL,
--   PRIMARY KEY (contact_id)
-- );