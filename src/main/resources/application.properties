spring.application.name=springsecs01
logging.pattern.console=${LOGPATTERN_CONSOLE:%green(%d{HH:mm:ss.SSS}) %yellow(%-5level) %red([%thread]) %blue(%logger{15}) - %msg%n}
#spring.security.user.name=${SECURITY_USERNAME:admin}
#spring.security.user.password=${SECURITY_PASSWORD:123456}

logging.level.org.springframework.security=${SPRING_SECURITY_LOG_LEVEL:TRACE}

####################################################################
##H2-database
#spring.h2.console.enabled=true
#spring.datasource.url=jdbc:h2:mem:security_db

##MySQL
#spring.datasource.url=jdbc:mysql://localhost:3306/security_db
#spring.datasource.username=root
#spring.datasource.password=123456
## following is optional - not need!!!
##spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

#SQL Server
spring.datasource.url=jdbc:sqlserver://localhost;databaseName=security_db;trustServerCertificate=true;
spring.datasource.username=sa
spring.datasource.password=123456
# 2 followings are optional - not need!!!
#spring.datasource.driverClassName=com.microsoft.sqlserver.jdbc.SQLServerDriver
#spring.jpa.hibernate.dialect=org.hibernate.dialect.SQLServerDialect

######################################################################
# https://www.baeldung.com/spring-boot-data-sql-and-schema-sql

# Cho phep dung .sql de tao bang va insert du lieu
# following need for creating tables
#script-based initialization is performed by default only for embedded databases (e.c H2),
#to always initialize a database using scripts, we'll have to use:
spring.jpa.generate-ddl=true

# Cho phep dung dong thoi Hibernate va .sql de tao bang
#after Hibernate schema creation is performed then additionally schema.sql is read
# for any additional schema changes and data.sql is executed to populate the database.
#both Hibernate automatic schema generation in conjugation with script-based schema creation and data population,
# we'll have to use:
spring.jpa.defer-datasource-initialization=true

# following need for add data into table (not need in H2-Database)
#to always initialize a database using scripts, we'll have to use:
#embedded, never, always
spring.sql.init.mode=always

#disable Hibernate automatic schema creation
#This will ensure that script-based initialization is performed using schema.sql and data.sql directly.
#update, create, create-drop, validate, none (5 options default=none for SQL Server, MySQL, ...; default = create-drop for H2-Database)
spring.jpa.hibernate.ddl-auto=create

#Show SQL statements on console
spring.jpa.show-sql=true

#format queries (on console)
spring.jpa.properties.hibernate.format_sql=true

logging.level.org.hibernate.type=trace

##turn statistics on
#spring.jpa.properties.hibernate.generate_statistics=true

##format column names in tables
#spring.jpa.properties.hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

